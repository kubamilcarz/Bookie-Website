name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect.outputs.manager }}

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.md', '**/*.mdx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies (npm with legacy peer deps)
        if: steps.detect.outputs.manager == 'npm'
        run: npm ci --legacy-peer-deps

      - name: Install dependencies (yarn)
        if: steps.detect.outputs.manager == 'yarn'
        run: yarn install --frozen-lockfile

      # Build + Export. Make sure your package.json "build" runs: next build && next export
      - name: Build (Next static export)
        run: |
          if [ "${{ steps.detect.outputs.manager }}" = "yarn" ]; then
            yarn build
          else
            npm run build
          fi

      # Ensure GitHub Pages serves folders starting with underscore
      - name: Add .nojekyll
        run: touch ./out/.nojekyll

      # Optional: custom domain
      # - name: Add CNAME
      #   run: echo "yourdomain.com" > ./out/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
